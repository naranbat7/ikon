{"version":3,"sources":["constants/CONSTANT.js","utils/service.js","views/components/news/FormItem.js","views/forms/mission/NewsAdd.js","views/dashboard/Dashboard.js"],"names":["categoryHost","newsHost","getCategoryApi","method","url","addCategoryApi","deleteCategoryApi","getNewsApi","addNewsApi","deleteNewsApi","axios","require","module","exports","request","setGlobalLoading","setGlobalToast","body","console","log","data","then","response","catch","err","code","status","message","type","moment","locale","FormItem","forwardRef","item","num","getReq","useGlobal","deleteItem","a","Constant","id","className","src","imageUrl","style","width","height","name","publishedDate","fromNow","color","views","alignHorizontal","active","title","onClick","NewsAdd","props","useState","content","isCovid","isSponsored","categoryId","adminId","adminName","setData","category","setCategory","globalData","btnHandler","adminUrl","setModal","refresh","_data","useEffect","show","modal","onClose","size","centered","closeButton","label","value","onChange","val","target","checkedValue","idx","parseInt","disabled","InlineValue","row","md","placeholder","ColValue","rows","InlineRadiosValue","CategoryInput","custom","map","key","fields","Dashboard","alignVertical","xs","React","memo"],"mappings":"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","file":"static/js/7.2cb46f06.chunk.js","sourcesContent":["const categoryHost = \"http://127.0.0.1:8081\";\r\nconst newsHost = \"http://127.0.0.1:8082\";\r\n\r\nexport default {\r\n  getCategoryApi: {\r\n    method: `get`,\r\n    url: `${categoryHost}/category`,\r\n  },\r\n  addCategoryApi: {\r\n    method: `post`,\r\n    url: `${categoryHost}/category`,\r\n  },\r\n  deleteCategoryApi: {\r\n    method: `delete`,\r\n    url: `${categoryHost}/category`,\r\n  },\r\n  getNewsApi: {\r\n    method: `get`,\r\n    url: `${newsHost}/news`,\r\n  },\r\n  addNewsApi: {\r\n    method: `post`,\r\n    url: `${newsHost}/news`,\r\n  },\r\n  deleteNewsApi: {\r\n    method: `delete`,\r\n    url: `${newsHost}/news`,\r\n  },\r\n};\r\n","const axios = require(\"axios\");\r\n\r\nmodule.exports = {\r\n  request: (\r\n    setGlobalLoading,\r\n    setGlobalToast,\r\n    url,\r\n    method,\r\n    body = {}\r\n  ) => {\r\n    console.log(url);\r\n    setGlobalLoading(true);\r\n    return axios({\r\n      method: method,\r\n      url: url,\r\n      data: body,\r\n    })\r\n      .then((response) => {\r\n        // setTimeout(() => setGlobalLoading(false), 3000);\r\n        setGlobalLoading(false);\r\n        return response.data;\r\n      })\r\n      .catch((err) => {\r\n        setGlobalLoading(false);\r\n        const code = err.response ? err.response.status : 0;\r\n        if (code == 400)\r\n          setGlobalToast({ message: \"Бүрэн гүйцэд бөглөнө үү.\", type: false });\r\n        else if (code == 401) {\r\n          setGlobalToast({ message: \"Нэвтрэх шаардлагатай.\", type: false });\r\n        } else if (code == 403)\r\n          setGlobalToast({ message: \"Нууц үг буруу байна.\", type: false });\r\n        else if (code == 406)\r\n          setGlobalToast({ message: \"Эрх байхгүй байна.\", type: false });\r\n        else if (code == 409)\r\n          setGlobalToast({\r\n            message: \"Утасны дугаар эсвэл нэвтрэх нэр бүртгэлтэй байна.\",\r\n            type: false,\r\n          });\r\n        else if (code == 500)\r\n          setGlobalToast({ message: \"Серверийн алдаа.\", type: false });\r\n        else {\r\n          setGlobalToast({\r\n            message: \"Интернэт холболтоо шалгана уу.\",\r\n            type: false,\r\n          });\r\n        }\r\n        console.log(\"Error: \" + err);\r\n      });\r\n  },\r\n};\r\n","import React, { forwardRef } from \"react\";\r\n\r\nimport { CRow, CButton, CBadge } from \"@coreui/react\";\r\n\r\nimport { useGlobal } from \"../../../context/GlobalContext/use-global\";\r\nimport Constant from \"../../../constants/CONSTANT\";\r\nimport { request } from \"../../../utils/service\";\r\n\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/mn\";\r\nmoment.locale(\"mn\");\r\n\r\nconst FormItem = forwardRef(\r\n  ({ item, num, getReq}) => {\r\n\r\n    const {\r\n      setGlobalLoading,\r\n      setGlobalToast,\r\n    } = useGlobal();\r\n\r\n    const deleteItem = async () => {\r\n      await request(\r\n        setGlobalLoading,\r\n        setGlobalToast,\r\n        Constant.deleteNewsApi.url + \"/\" + item.id,\r\n        Constant.deleteNewsApi.method,\r\n      );\r\n      getReq();\r\n    }\r\n\r\n    return (\r\n      <tr key={item.id}>\r\n        <td className=\"text-center\">{num}</td>\r\n        <td className=\"text-center\">\r\n          <img src={item.imageUrl} style={{ width: 50, height: 50 }} />\r\n        </td>\r\n        <td className=\"text-center\">{item.name}</td>\r\n        <td className=\"text-center\">{moment(item.publishedDate).fromNow()}</td>\r\n        <td className=\"text-center\"><CBadge className=\"px-3 py-2\" color=\"success\">\r\n          {item.views}\r\n        </CBadge></td>\r\n        <td className=\"text-center\">\r\n          <CRow alignHorizontal=\"center\" className=\"xs-2\">\r\n            <CButton\r\n                className=\"ml-1\"\r\n                active\r\n                title=\"Устгах\"\r\n                color=\"danger\"\r\n                aria-pressed=\"true\"\r\n                onClick={deleteItem}\r\n              >\r\n                <CIcon name=\"cil-trash\" />\r\n              </CButton>\r\n          </CRow>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FormItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CButton,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CCard,\r\n  CCardBody,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CCol,\r\n  CTextarea,\r\n  CInputRadio,\r\n  CSelect,\r\n  CInputCheckbox,\r\n} from \"@coreui/react\";\r\nimport { useGlobal } from \"../../../context/GlobalContext/use-global\";\r\nimport Constant from \"../../../constants/CONSTANT\";\r\nimport { request } from \"../../../utils/service\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/mn\";\r\nmoment.locale(\"mn\");\r\n\r\nconst NewsAdd = (props) => {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    content: \"\",\r\n    isCovid: false,\r\n    isSponsored: false,\r\n    imageUrl: \"\",\r\n    categoryId: 0,\r\n    adminId: 0,\r\n    adminName: \"\"\r\n  });\r\n  const [category, setCategory] = useState([]);\r\n\r\n  const {\r\n    globalData,\r\n    setGlobalLoading,\r\n    setGlobalToast,\r\n  } = useGlobal();\r\n\r\n  const btnHandler = async () => {\r\n    const _data = await request(\r\n      setGlobalLoading,\r\n      setGlobalToast,\r\n      Constant.addNewsApi.url,\r\n      Constant.addNewsApi.method,\r\n      {\r\n        name: data.name,\r\n        content: data.content,\r\n        isCovid: data.isCovid,\r\n        isSponsored: data.isSponsored,\r\n        imageUrl: data.imageUrl,\r\n        categoryId: data.categoryId,\r\n        adminId: globalData.id,\r\n        adminName: globalData.name,\r\n        adminUrl: globalData.url\r\n      }\r\n    );\r\n    props.setModal(false);\r\n    props.refresh();\r\n  };\r\n\r\n  const getReq = async () => {\r\n    const _data = await request(\r\n      setGlobalLoading,\r\n      setGlobalToast,\r\n      Constant.getCategoryApi.url,\r\n      Constant.getCategoryApi.method\r\n    );\r\n    setCategory(_data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getReq();\r\n  }, []);\r\n\r\n  return (\r\n    <CModal\r\n      show={props.modal}\r\n      onClose={() => props.setModal(false)}\r\n      size=\"lg\"\r\n      centered\r\n    >\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>Мэдээ нэмэх</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <CCard>\r\n          <CCardBody>\r\n            <InlineValue\r\n              label=\"Мэдээний нэр\"\r\n              value={data.name}\r\n              onChange={(val) => setData({ ...data, name: val.target.value })}\r\n            />\r\n            <ColValue\r\n              label=\"Дэлгэрэнгүй\"\r\n              value={data.content}\r\n              onChange={(val) =>\r\n                setData({ ...data, content: val.target.value })\r\n              }\r\n            />\r\n            <InlineValue\r\n              label=\"Cover зураг\"\r\n              value={data.imageUrl}\r\n              onChange={(val) => setData({ ...data, imageUrl: val.target.value })}\r\n            />\r\n            <InlineRadiosValue\r\n              label=\"Covid-той холбоотой юу?\"\r\n              checkedValue={data.isCovid}\r\n              onChange={(val) =>\r\n                setData({ ...data, isCovid: !data.isCovid})\r\n              }\r\n              idx={0}\r\n            />\r\n            <InlineRadiosValue\r\n              label=\"Онцгой зар уу?\"\r\n              checkedValue={data.isSponsored}\r\n              onChange={(val) => {\r\n                setData({ ...data, isSponsored: !data.isSponsored });\r\n              }}\r\n              idx={1}\r\n            />\r\n            <CategoryInput\r\n              label=\"Ангилал\"\r\n              checkedValue={data.categoryId}\r\n              onChange={(val) =>\r\n                setData({ ...data, categoryId: parseInt(val.target.value) })\r\n              }\r\n              data={category}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"info\" onClick={btnHandler} disabled={!data.name || !data.imageUrl || !data.content || data.categoryId == 0}>\r\n          Нэмэх\r\n        </CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  );\r\n};\r\nexport default NewsAdd;\r\n\r\nconst InlineValue = ({ label, value, onChange, type = \"text\" }) => {\r\n  return (\r\n    <CFormGroup row>\r\n      <CCol md=\"3\">\r\n        <CLabel>{label}</CLabel>\r\n      </CCol>\r\n      <CCol md=\"9\">\r\n        <CInput\r\n          placeholder={label}\r\n          value={value}\r\n          onChange={onChange}\r\n          type={type}\r\n        />\r\n      </CCol>\r\n    </CFormGroup>\r\n  );\r\n};\r\n\r\nconst ColValue = ({ label, value, onChange }) => {\r\n  return (\r\n    <CFormGroup>\r\n      <CLabel>{label}</CLabel>\r\n      <CTextarea placeholder={label} value={value} onChange={onChange} rows={16} />\r\n    </CFormGroup>\r\n  );\r\n};\r\n\r\nconst InlineRadiosValue = ({\r\n  label = \"\",\r\n  checkedValue,\r\n  onChange,\r\n  idx\r\n}) => {\r\n  return (\r\n    <CFormGroup row>\r\n      <CCol md=\"6\">\r\n        <CInputCheckbox onChange={(val) => onChange(val.target.value)} />\r\n      </CCol>\r\n      <CCol md=\"9\">\r\n        <CLabel>{label}</CLabel>\r\n      </CCol>\r\n    </CFormGroup>\r\n  );\r\n};\r\n\r\nconst CategoryInput = ({ label = \"\", data = [], onChange }) => {\r\n  return (\r\n    <CFormGroup row>\r\n      <CCol md=\"3\">\r\n        <CLabel>{label}</CLabel>\r\n      </CCol>\r\n      <CCol md=\"9\">\r\n        <CSelect custom name=\"select\" id=\"select\" onChange={onChange}>\r\n          {data.map((item, key) => {\r\n            return (\r\n              <option key={key} value={item.id}>\r\n                {item.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </CSelect>\r\n      </CCol>\r\n    </CFormGroup>\r\n  );\r\n};","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { CCol, CRow, CButton } from \"@coreui/react\";\r\n\r\nimport { useGlobal } from \"../../context/GlobalContext/use-global\";\r\nimport Constant from \"../../constants/CONSTANT\";\r\nimport { request } from \"../../utils/service\";\r\n\r\nimport FormItem from \"../components/news/FormItem\";\r\nimport ModalNewsAdd from \"../forms/mission/NewsAdd\";\r\n\r\nconst fields = [\"№\", \"\", \"Нэр\", \"Нийтэлсэн огноо\", \"Үзсэн\", \"Үйлдэл\"];\r\n\r\nconst Dashboard = (props) => {\r\n  const [modal, setModal] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const {\r\n    setGlobalLoading,\r\n    setGlobalToast,\r\n  } = useGlobal();\r\n\r\n  const getReq = async () => {\r\n    const _data = await request(\r\n      setGlobalLoading,\r\n      setGlobalToast,\r\n      Constant.getNewsApi.url,\r\n      Constant.getNewsApi.method\r\n    );\r\n    console.log(_data);\r\n    setData(_data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getReq();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <CRow alignVertical=\"center\">\r\n          <CCol xs=\"1\">\r\n            <CButton\r\n              color=\"success\"\r\n              onClick={() => setModal(true)}\r\n            >\r\n              Нэмэх\r\n            </CButton>\r\n          </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol>\r\n          <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                {fields.map((item, idx) => {\r\n                  return (\r\n                    <th key={idx} className=\"text-center\">\r\n                      {item}\r\n                    </th>\r\n                  );\r\n                })}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data &&\r\n                data.map((item, key) => {\r\n                  return (\r\n                    <FormItem\r\n                      item={item}\r\n                      num={key + 1}\r\n                      getReq={getReq}\r\n                    />\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </CCol>\r\n      </CRow>\r\n      <ModalNewsAdd\r\n        modal={modal}\r\n        setModal={setModal}\r\n        refresh={getReq}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Dashboard);\r\n"],"sourceRoot":""}
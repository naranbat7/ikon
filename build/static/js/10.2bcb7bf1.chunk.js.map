{"version":3,"sources":["views/pages/login/Login.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","useState","email","password","body","setBody","alert","setAlert","message","setMessage","loading","setLoading","useGlobal","globalData","setGlobalAuthorization","setGlobalToast","setGlobalName","setGlobalId","setGlobalUrl","formHandler","a","app","initializeApp","db","getFirestore","col","collection","getDocs","snapshot","list","docs","map","doc","data","isLogged","forEach","e","isAuthorized","name","id","profileUrl","type","console","error","authorization","to","className","md","color","placeholder","required","value","onChange","target","size","sitekey","log","xs","style","width","disabled","username","onClick"],"mappings":"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","file":"static/js/10.2bcb7bf1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow,\r\n  CAlert,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport Loader from \"react-spinners/PulseLoader\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { useGlobal } from \"../../../context/GlobalContext/use-global\";\r\nimport {initializeApp} from \"firebase/app\";\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore/lite';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAxULjAJsgdEoGXPh476jSP6KyXiITbtMA\",\r\n  authDomain: \"ikon-c7552.firebaseapp.com\",\r\n  projectId: \"ikon-c7552\",\r\n  storageBucket: \"ikon-c7552.appspot.com\",\r\n  messagingSenderId: \"1040298841536\",\r\n  appId: \"1:1040298841536:web:b55daa9bff5ca25e2f6425\",\r\n  measurementId: \"G-GH1PZBR5E1\"\r\n};\r\n\r\nconst Login = () => {\r\n  const [body, setBody] = useState({ email: \"\", password: \"\" });\r\n  const [alert, setAlert] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const {\r\n    globalData,\r\n    setGlobalAuthorization,\r\n    setGlobalToast,\r\n    setGlobalName,\r\n    setGlobalId,\r\n    setGlobalUrl\r\n  } = useGlobal();\r\n\r\n  const formHandler = async () => {\r\n    try {\r\n      const app = initializeApp(firebaseConfig);\r\n      const db = getFirestore(app);\r\n      const col = collection(db, 'users');\r\n      const snapshot = await getDocs(col);\r\n      const list = snapshot.docs.map(doc => doc.data());\r\n      let isLogged = false;\r\n      list.forEach((e) => {\r\n        if (e.email == body.email && e.password == body.password) {\r\n          setAlert(false);\r\n          setLoading(false);\r\n          setGlobalAuthorization({isAuthorized: true});\r\n          setGlobalName(e.name);\r\n          setGlobalId(e.id);\r\n          setGlobalUrl(e.profileUrl);\r\n          setGlobalToast({ message: \"Амжилттай нэвтэрлээ.\", type: true });\r\n          isLogged = true;\r\n        } \r\n        isLogged = false;\r\n      });\r\n      alert(isLogged);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessage(\"Цахим шуудан эсвэл нууц үг буруу.\");\r\n      setAlert(true);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const onChange = (value) => {\r\n    console.log(\"Captcha value: \", value);\r\n  };\r\n\r\n  return globalData.authorization.isAuthorized ? (\r\n    <Redirect to=\"/dashboard\" />\r\n  ) : (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n      <CContainer>\r\n        {alert ? (\r\n          <CRow className=\"justify-content-center\">\r\n            <CCol md=\"4\">\r\n              <CAlert color=\"danger\">{message}</CAlert>\r\n            </CCol>\r\n          </CRow>\r\n        ) : null}\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"4\">\r\n            <CCardGroup>\r\n              <CCard className=\"p-4\">\r\n                <CCardBody>\r\n                  <CForm>\r\n                    <h1>Нэвтрэх</h1>\r\n                    <p className=\"text-muted\">Админ панел руу нэвтрэх</p>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-user\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        placeholder=\"Цахим шуудан\"\r\n                        required={true}\r\n                        value={body.email}\r\n                        onChange={(value) =>\r\n                          setBody({ ...body, email: value.target.value })\r\n                        }\r\n                      />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-4\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-lock-locked\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        type=\"password\"\r\n                        placeholder=\"Нууц үг\"\r\n                        value={body.password}\r\n                        onChange={(value) =>\r\n                          setBody({ ...body, password: value.target.value })\r\n                        }\r\n                        required\r\n                      />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-4\">\r\n                      <ReCAPTCHA\r\n                        size=\"invisible\"\r\n                        sitekey=\"6LeqZVUaAAAAAAnUPKH6Ca6ZIuWYnABBfg0d7Chw\"\r\n                        onChange={onChange}\r\n                      />\r\n                    </CInputGroup>\r\n                    <CRow>\r\n                      <CCol xs=\"6\">\r\n                        <CButton\r\n                          color=\"primary\"\r\n                          style={{ width: 120 }}\r\n                          disabled={\r\n                            body.username == \"\" ||\r\n                            body.password == \"\" ||\r\n                            loading\r\n                          }\r\n                          onClick={() => {\r\n                            formHandler();\r\n                          }}\r\n                        >\r\n                          {loading ? (\r\n                            <Loader color=\"#fff\" size={10} />\r\n                          ) : (\r\n                            \"Нэвтрэх\"\r\n                          )}\r\n                        </CButton>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CForm>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCardGroup>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}